[ main ]
batch_name = 'linear3d_test';
Nstates = 3;
Ninputs = 1;
Nsamples = 16;
x0 = [ 0; 0; 0 ];
u0 = [ 0 ];
d0 = [ 1; 0; 0 ]; % remember to make sure to sum to one (otherwise this won't work)
terminal_loc = [ 1; 1; 1 ];
t0 = 0;
tf = 2;
x_max = [  2;  2;  2 ];
x_min = [ -1;  -1; -1 ];
u_max = [  20 ];
u_min = [ -20 ];
numerical_tolerance = 1e-2;
max_iter = 100;
pwm_iter = 5;
qp_cons = 0; % if this is 1 then use quadratic constraints (has no effect if we aren't using a qp solver)

[ idxs ]
px = 1;
py = 2;
pz = 3;
pos = 1:3;

[ functions ]
folder = 'linear3d';
sys_model{1} = @( x, u, t, dummy ) linear_dynamics( x, u, t, [ 1.0979, -0.0105, 0.0167; -0.0105, 1.0481, 0.0825; 0.0167, 0.0825, 1.1540 ], [ 0.9801; -0.1987; 0 ], dummy );
sys_model{2} = @( x, u, t, dummy ) linear_dynamics( x, u, t, [ 1.0979, -0.0105, 0.0167; -0.0105, 1.0481, 0.0825; 0.0167, 0.0825, 1.1540 ], [ 0.1743; 0.8601; -0.4794 ], dummy );
sys_model{3} = @( x, u, t, dummy ) linear_dynamics( x, u, t, [ 1.0979, -0.0105, 0.0167; -0.0105, 1.0481, 0.0825; 0.0167, 0.0825, 1.1540 ], [ 0.0952; 0.4699; 0.8776 ], dummy );
instant_cost{1} = @linear_quad_cost;
instant_cost{2} = @linear_quad_cost;
instant_cost{3} = @linear_quad_cost;
terminal_cost = @( x, dummy ) linear_terminal_cost( x, user.terminal_loc, dummy );
instant_cons = @linear_instant_cons;
instant_cons_pattern = @linear_instant_cons_pattern;
update_lengths = @linear_update_lengths;

[ optfctn ]
solver = 'quadprog';
%solver = 'tomlab';
%tomlab_solver = 'minlpSolve';
%tomlab_solver = 'minlpBB';
%tomlab_solver = 'snopt';
%tomlab_solver = 'filterSQP';
%tomlab_solver = 'cplex';
%tomlab_solver = 'knitro';
%tomlab_solver = 'qpopt';
%tomlab_solver = 'sqopt';
%tomlab_solver = 'lssol';
gamma = 1;
delta = 0.1;

[ armijo ]
alpha = 0.1;
beta = 0.87;
kmax = 100;

[ pwm ]
alphabar = 0.005;
betabar = 0.72;
eta = 3;
omega = 1e-6;

[ cost ]
%instant_cost.Qx = [ 1, 0; 0, 0.5 ];
%instant_cost.Qu = 0.2;
%instant_cost.Ktime = 3;
instant_cost.Qx = zeros(3);
instant_cost.Qu = 0.01;
instant_cost.Ktime = 0;
terminal_cost.Qx = eye( 3 );

%[ obstacle{1} ]
%type = 'sphere';
%radius = 0.25;
%center = [ 0.5; 0.5; 0.5 ];
