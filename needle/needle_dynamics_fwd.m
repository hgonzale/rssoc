function [ f, dfdx, dfdu, dfdt ] = needle_dynamics_fwd( x, u, t, user )
rinv = 1 / user.needle_radius;

f = [   sin( x(5) ) * u(1); ...
      - cos( x(5) ) * sin( x(4) ) * u(1); ...
        cos( x(4) ) * cos( x(5) ) * u(1); ...
        rinv * cos( x(6) ) * sec( x(5) ) * u(1); ...
        rinv * sin( x(6) ) * u(1); ...
      - rinv * cos( x(6) ) * tan( x(5) ) * u(1); ];

if( nargout >= 2 )
  dfdx = [ 0, 0, 0,  0,                             cos(x(5)) * u(1),                                 0; ...
           0, 0, 0, -cos(x(5)) * cos(x(4)) * u(1),  sin(x(5)) * sin(x(4)) * u(1),                     0; ...
           0, 0, 0, -sin(x(4)) * cos(x(5)) * u(1), -cos(x(4)) * sin(x(5)) * u(1),                     0; ...
           0, 0, 0,  0,                             rinv * cos(x(6)) * tan(x(5)) * sec(x(5)) * u(1), -rinv * sin(x(6)) * sec(x(5)) * u(1); ...
           0, 0, 0,  0,                             0,                                                rinv * cos(x(6)) * u(1); ...
           0, 0, 0,  0,                            -rinv * cos(x(6)) * sec(x(5)) * sec(x(5)) * u(1),  rinv * sin(x(6)) * tan(x(5)) * u(1); ];
  
  dfdu = [  sin(x(5)),                    0; ...
           -cos(x(5)) * sin(x(4)),        0; ...
            cos(x(4)) * cos(x(5)),        0; ...
            rinv * cos(x(6)) * sec(x(5)), 0; ...
            rinv * sin(x(6)),             0; ...
           -rinv * cos(x(6)) * tan(x(5)), 0; ];

  dfdt = zeros( 6, 1 );
end
